{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/PRE_JUNIOR.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Message","props","className","s","message","avatarArea","avatar","src","containerMessage","name","messages","time","messageData","HW1","Affair","deleteCallback","deleteAffairCallback","affair","_id","priority","onClick","Affairs","mappedAffairs","data","map","a","key","setFilter","filter","defaultAffairs","HW2","useState","affairs","setAffairs","affrairsByFilter","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputArea","value","onChange","onKeyPress","e","charCode","inputClassError","inputClass","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","alert","HW3","setUsers","newUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","finalClassName","red","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","Error404","PRE_JUNIOR","Routes","path","exact","render","component","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8cc4549c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__17dIt\",\"avatarArea\":\"Message_avatarArea__2MAol\",\"avatar\":\"Message_avatar__2zNAF\",\"containerMessage\":\"Message_containerMessage__18rqm\",\"name\":\"Message_name__1Dena\",\"messages\":\"Message_messages__27TLN\",\"time\":\"Message_time__3DuiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"Greeting_inputArea__dyrJL\",\"error\":\"Greeting_error__-ag4h\",\"inputClass\":\"Greeting_inputClass__3Kiws\",\"inputClassError\":\"Greeting_inputClassError__3h62r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1_koQ\",\"errorInput\":\"SuperInputText_errorInput__3p3Ng\",\"error\":\"SuperInputText_error__3UH9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2dnSO\",\"red\":\"SuperButton_red__3KgwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__bimfY\",\"spanClassName\":\"SuperCheckbox_spanClassName__2gbW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2poDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__LbFwU\",\"column\":\"HW4_column__1P7vp\"};","import React from \"react\";\r\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n            <NavLink to={\"/PRE_JUNIOR\"}>// add PRE_JUNIOR</NavLink>\r\n            </div>\r\n            <NavLink to={\"/PreJunior\"}>// add PreJunior</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from'./Message.module.css'\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatarArea} >\r\n                <img className={s.avatar} src={props.avatar}/>\r\n            </div>\r\n            <div className={s.containerMessage}>\r\n                <div className={s.name}> {props.name}</div>\r\n                <div className={s.messages}> {props.message}</div>\r\n                <div className={s.time}>   {props.time}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n    ;\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Artem\",\r\n    message: \"npm start нажимал?\",\r\n    time: \"20:00\",\r\n};\r\ntype HW1PropsType = { }\r\n\r\nfunction HW1(props:HW1PropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n            {messageData.name}\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n          {/*  <hr/>\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage/>\r\n            <hr/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from './HW2';\r\n/*import any = jasmine.any;*/\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (any) // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = props.deleteAffairCallback;// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair._id} {props.affair.name} {props.affair.priority}\r\n\r\n            <button onClick={() => {\r\n                deleteCallback(props.affair._id)\r\n            }}>X\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    let mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n    /* const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));*/\r\n    /*const setAll = (filter:FilterType) => props.filterAffairsCallback(filter); // need to fix\r\n    const setHigh = (filter:FilterType) => props.filterAffairsCallback(filter);\r\n    const setMiddle = (filter:FilterType) => props.filterAffairsCallback(filter);\r\n    const setLow = (filter:FilterType) => props.filterAffairsCallback(filter);*/\r\n    const setFilter = (filter: FilterType) => props.setFilter(filter);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={() => {\r\n                setFilter(\"all\")\r\n            }}>All\r\n            </button>\r\n            <button onClick={() => setFilter(\"high\")}>High</button>\r\n            <button onClick={() => setFilter(\"middle\")}>Middle</button>\r\n            <button onClick={() => setFilter(\"low\")}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"; // need to fix any\r\n\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: string\r\n} // need to fix any\r\n\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport let filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === \"high\") {\r\n        return affairs.filter(affairs => affairs.priority === \"high\")\r\n    } else if (filter === \"middle\") {\r\n        return affairs.filter(affairs => affairs.priority === \"middle\")\r\n    } else if (filter === \"low\") {\r\n        return affairs.filter(affairs => affairs.priority === \"low\")\r\n    }\r\n    return affairs\r\n    /*if (filter === \"all\") {\r\n        return affairs\r\n    } else return affairs  ;*/ // need to fix\r\n}\r\nexport let deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    // need to fix any\r\n    return affairs.filter(affairs => affairs._id !== _id);\r\n    /*return;*/ // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    let affrairsByFilter = filterAffairs(affairs, filter)\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={affrairsByFilter}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n\r\n","import React, {useState, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void// need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    // need to fix with (?:)\r\n\r\n    /*const inputClassName=()=>name.length > 0 ? inputClass2 : inputClass*/\r\n    const onPressHandler = ((e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addUser()\r\n        }\r\n    })\r\n    /*    debugger*//*console.log({errorClass})*/\r\n    return (\r\n        <div className={s.inputArea}>\r\n            <div> Return name:</div>\r\n            <input value={name} onChange={setNameCallback}\r\n                   onKeyPress={onPressHandler}\r\n                   className={(error !== \"\") ? s.inputClassError : s.inputClass}/>\r\n\r\n\r\n            <button onClick={() => {\r\n                addUser()\r\n            }}>add\r\n            </button>\r\n\r\n            {error !== \"\" && <div className={s.error}>{error}</div>}\r\n            <div> Number of Users = {totalUsers}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\")\r\n    const [error, setError] = useState<any>(\"\")\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    const addUser = () => {\r\n        if (name.length > 1) {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name} !`); // need to fix\r\n            setName(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            setError(\"the name cannot be shorter than two letters, please enter the correct name\")\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const newUser = {_id: v1(), name: name}\r\n        const newUsers = [newUser, ...users]\r\n        setUsers(newUsers);/*  users.push(name)*/\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        setError && setError(\"\")\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error && `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    error?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${error ? s.red : s.default} ${className}`;//\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)  // сделайте так чтоб работал onChange и\r\n        onChange && onChange(e)\r\n        // onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    /* const error = text ? \"\" : \"error\";*/\r\n    const [error, setError] = useState<string>(\"\")\r\n    const showAlert = () => {\r\n        if (text) {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            alert(\"введите текст...\");\r\n            setError(\"the field cannot be empty\")\r\n\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    setError={setError}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    error={error} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    PUSH {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\n\nconst PRE_JUNIOR:React.FC=() => {\n    return (\n        <div>PRE_JUNIOR</div>\n    );\n}\n\nexport default PRE_JUNIOR;","import React from \"react\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport {Route, Redirect, Switch, RedirectProps, BrowserRouter} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PRE_JUNIOR from \"./pages/PRE_JUNIOR\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    /*  PreJunior: \"PRE_JUNIOR/pre-junior\"*/\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n\r\n        <div>\r\n            {/* Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR\r\n            exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n\r\n                <Route path={\"/\"} exact render={() => <Redirect to=\"PRE_JUNIOR\"/>}/>\r\n                <Route path=\"/PreJunior\" component={PreJunior}/>\r\n                <Route path=\"/PRE_JUNIOR\" component={PRE_JUNIOR}/>\r\n\r\n\r\n                // add routes\r\n\r\n                {/* у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n            {/*<Route path={\"/PRE_JUNIOR\"} component={PRE_JUNIOR}/> //proba*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n       /* <BrowserRouter>*/\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n          {/*  <HW1/>*/}\r\n           {/* <HW2/>*/}\r\n           {/* <HW3/>*/}\r\n          {/*  <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n     /*   </BrowserRouter>*/\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}