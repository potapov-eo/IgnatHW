{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h13/RequestsAPI.ts","p2-homeworks/h13/auth-reducer.ts","p2-homeworks/h10/bll/preloader.tsx","p2-homeworks/h13/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Jun.tsx","p2-homeworks/h5/pages/JunPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","SuperRange","type","onChange","onChangeRange","value1","restProps","className","s","istyle","value","aria-valuenow","e","currentTarget","useStyles","makeStyles","root","width","margin","valuetext","SuperDoubleRange","value2","classes","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","HW11","useState","setValue1","setValue2","theme","useSelector","state","themes","val","val1","val2","SuperRadio","withStyles","color","green","checked","props","Radio","options","onChangeOption","onChangeCallback","defaultValue","mappedOptions","map","o","i","key","initState","HW12","dispatch","useDispatch","changeThemeAC","SuperCheckbox","onChangeChecked","spanClassName","children","Checkbox","inputProps","SuperButton","error","onClick","name","size","finalClassName","Button","variant","style","loading","loadingAC","instance","axios","create","baseURL","RequestAPI","data","post","initialState","success","setErrorAC","Preloader","src","height","Request","auth","onChangeCheckedCallback","useCallback","setSuccessAC","then","res","status","errorText","catch","response","message","console","log","finally","setSuccessTC","HW13","PreJunior","Error404","alt","Jun","textAlign","fontSize","JunPlus","PATH","Routes","path","exact","render","to","Header","item","activeClassName","activeLink","HW5","center","App","Boolean","window","location","hostname","match","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAY,wBAAwB,IAAM,kBAAkB,WAAW,uBAAuB,KAAO,mBAAmB,YAAY,0B,mBCAhLD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,MAAQ,0B,+NC4CXC,EAhCmC,SAAC,GAQ9C,EANGC,KAMF,IALEC,EAKH,EALGA,SAAUC,EAKb,EALaA,cAAcC,EAK3B,EAL2BA,OAGrBC,GAEN,EAJGC,UAIH,yEASD,OACI,yBAAKA,UAAWC,IAAEC,QACd,yCACIC,MAAOL,EACPH,KAAM,QACNS,gBAAe,GACfR,SAda,SAACS,GACtBT,GAAYA,EAASS,GAErBR,GAAiBA,GAAeQ,EAAEC,cAAcH,SAcpCJ,M,kBCnCdQ,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,IACPC,OAAQ,UAIhB,SAASC,EAAUT,GACf,MAAM,GAAN,OAAUA,EAAV,SAUJ,IAqCeU,EArC+C,SAAC,GAQzD,IALEhB,EAKH,EALGA,cAAeC,EAKlB,EALkBA,OAAOgB,EAKzB,EALyBA,OAkBpBC,GAbL,mDAaeR,KAChB,OAEQ,yBAAKP,UAAWe,EAAQN,MACpB,kBAACO,EAAA,EAAD,CACIb,MAAO,CAACL,EAAOgB,GACflB,SAXK,SAACqB,EAAYC,GAE9BrB,GAAiBA,EAAcqB,IAUnBC,kBAAkB,OAClBC,kBAAgB,eAChBC,iBAAkBT,M,yBCKvBU,MAjDf,WAAiB,IAAD,EACgBC,mBAAS,IADzB,mBACLzB,EADK,KACG0B,EADH,OAGgBD,mBAAS,IAHzB,mBAGLT,EAHK,KAGGW,EAHH,KAINC,EAAQC,aAAqC,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,UAMxE,OACI,yBAAK7B,UAAWC,IAAEyB,IACd,6BACA,0BAAM1B,UAAWC,IAAEyB,EAAQ,UAA3B,gBAIA,6BACI,8BAAO5B,GACP,6BAAK,kBAAC,EAAD,CACDD,cAfM,SAACiC,GAAD,OAAiBN,EAAUM,IAgBjChC,OAAQA,MAKhB,6BACI,mCACA,8BAAOA,GACP,6BAAK,kBAAC,EAAD,CACDA,OAAQA,EACRgB,OAAQA,EAGRjB,cA5BY,SAAC,GAAiC,IAAD,mBAA/BkC,EAA+B,KAAzBC,EAAyB,KACzDR,EAAUO,GACVN,EAAUO,OA6BF,8BAAOlB,IAGX,6BAIA,+B,wBCKGmB,GA7CIC,YAAW,CAC1BzB,KAAM,CACF0B,MAAOC,IAAM,KACb,YAAa,CACTD,MAAOC,IAAM,OAGrBC,QAAS,IAPMH,EAQhB,SAACI,GAAD,OAAuB,kBAACC,EAAA,EAAD,eAAOJ,MAAM,WAAcG,OAEH,SAAC,GAO9C,EALG3C,KAKF,IAJE6C,EAIH,EAJGA,QAASrC,EAIZ,EAJYA,MACCsC,GAGb,EAHG7C,SAGH,EAHa6C,gBAKRC,GAFL,sEAEwB,SAACrC,GAEtBoC,GAAkBA,EAAepC,EAAEC,cAAcqC,gBAI/CC,EAAuBJ,EAAUA,EAAQK,KAAI,SAACC,EAAGC,GAAJ,OAC/C,2BAAOC,IAAK,IAAMD,GACd,kBAACR,EAAA,EAAD,CACIF,QAASlC,IAAU2C,EACnBlD,SAAU8C,EACVvC,MAAO2C,EACPX,MAAM,YAGTW,MAEJ,GAEL,OACI,oCACKF,K,QC7CPK,EAAY,CACdpB,OAAO,QCDLA,EAAS,CAAC,OAAQ,MAAO,QAwBhBqB,MAtBf,WACI,IAAMC,EAAWC,cACX1B,EAAQC,aAAqC,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,UAIxE,OACI,yBAAK7B,UAAWC,IAAEyB,IACd,6BACA,0BAAM1B,UAAWC,IAAEyB,EAAQ,UAA3B,aAGA,kBAAC,EAAD,CACIc,QAASX,EACTY,eAXW,SAACf,GACpByB,EDSqB,SAACzB,GAAD,MAAsB,CAC/C/B,KAAK,eACL+B,SCXa2B,CAAc3B,KAWfvB,MAAOuB,IAEX,+B,0BC4BG4B,EAvCyC,SAAC,GASpD,EAPG3D,KAOF,IANEC,EAMH,EANGA,SAAU2D,EAMb,EANaA,gBACelB,GAK5B,EALGrC,UAKH,EALcwD,cAKd,EAL4BnB,SACzBoB,EAIH,EAJGA,SAIH,sGASD,OACI,+BACI,kBAACC,EAAA,EAAD,CACI9D,SAXa,SAACS,GACtBkD,GAAmBA,EAAgBlD,EAAEC,cAAc+B,SACnDzC,GAAYA,EAASS,IAUbgC,QAASA,EACTF,MAAM,UACNwB,WAAY,CAAC,aAAc,wBAU9BF,GAAY,0BAAMzD,UAAWC,IAAEuD,eAAgBC,K,SCpB7CG,EAfqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,MAAkBC,GAGrB,EAHU9D,UAGV,EAHqB8D,SAGrB,KAH8B3B,MAG9B,EAHoC4B,aAGpC,MAHyC,OAGzC,MAHgDC,YAGhD,MAHqD,SAGrD,EACKC,GADL,qEACsBJ,EAAQ,YAAc,WAE7C,OACI,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAO8B,EAAgBH,QAASA,EAASM,MAAO,CAACzD,OAAQ,YAAaqD,KAAMA,GAEtGD,EAFF,MCjBFd,EAAY,CACdoB,SAAQ,GAYCC,EAAY,SAACD,GAAD,MAAsB,CAC3C1E,KAAK,iBACL0E,Y,QCnBEE,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,0CAIAC,EAAa,SACjBC,GACD,OAAOL,EAASM,KAAT,YAAiDD,ICJ1DE,EAAe,CACjBC,SAAQ,EACRlB,MAAM,IAiBGmB,EAAa,SAACnB,GAAD,MACrB,CAAClE,KAAM,YAAakE,UChBVoB,EANC,WACZ,OAAO,6BACP,yBAAKC,IAAI,6DAA8Dd,MAAQ,CAAEe,OAAQ,SCuC9EC,MAnCf,WACI,IAAML,EAAUpD,aAAmC,SAAAC,GAAK,OAAIA,EAAMyD,KAAKN,WACjEV,EAAU1C,aAAmC,SAAAC,GAAK,OAAIA,EAAMyC,QAAQA,WACpER,EAAQlC,aAAkC,SAAAC,GAAK,OAAIA,EAAMyD,KAAKxB,SAC9DV,EAAWC,cAEXkC,EAA0BC,uBAAY,SAAClF,GACzC8C,EFMoB,SAAC4B,GAAD,MACvB,CAACpF,KAAM,cAAeoF,WEPVS,CAAanF,EAAEC,cAAc+B,YAClC,IAIR,OACI,6BAEKgC,EAEO,kBAAC,EAAD,MACC,6BACD,kBAAC,EAAD,CAAehC,QAAS0C,EAASnF,SAAU0F,GAA3C,KACA,kBAAC,EAAD,CACIxB,QAZG,WACnBX,EFSoB,SAAC4B,GAAD,OAAsB,SAAC5B,GAC/CA,EAASmB,GAAU,IACnBK,EAAgB,CAACI,QAAQA,IACpBU,MAAK,SAAAC,GACiB,MAAfA,EAAIC,OAEJxC,EAAS6B,EAAWU,EAAId,KAAKgB,YAG7BzC,EAAS6B,EAAW,oBAG3Ba,OAAM,SAAChC,GACJV,EAAS6B,EAAWnB,EAAMiC,SAAWjC,EAAMiC,SAASlB,KAAKgB,UAAY/B,EAAMkC,UAC3EC,QAAQC,IAAR,eAAiBpC,IAAUmC,QAAQC,IAAKpC,EAAMiC,SAAWjC,EAAMiC,SAASlB,KAAKgB,UAAY/B,EAAMkC,YAChGG,SAAQ,kBAAK/C,EAASmB,GAAU,QExB1B6B,CAAapB,KAYNhB,KAAM,OACNC,KAAM,YAGjBH,GAAO,6BACPA,KClBEuC,MAff,WAEI,OACI,oCACA,6BACJ,6CAGI,6BACI,kBAAE,EAAF,OAER,+BCmBWC,MAnBf,WACI,OACI,6BAUI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCdGC,OAXf,WACI,OACI,yBAAKtG,UAAWC,IAAE4D,OACd,oCACA,yBAAKqB,IAAI,iGACJqB,IAAI,wHACT,kDCEGC,OATf,WACI,OACI,yBAAKpC,MAAO,CAACqC,UAAW,SAAUC,SAAU,SACxC,2FACA,yBAAKxB,IAAI,oECKNyB,OATf,WACI,OACI,yBAAKvC,MAAO,CAACqC,UAAW,SAAUC,SAAU,SACxC,oGACA,yBAAKxB,IAAI,kHCCR0B,GACG,cADHA,GAEJ,OAFIA,GAGC,WA0BCC,OAtBf,WACI,OACI,6BAEI,kBAAC,IAAD,KAGI,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIL,QAEpD,kBAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,kBAAC,EAAD,SALhD,gBAOI,kBAAC,IAAD,CAAOF,KAAMF,GAAUI,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOF,KAAMF,GAAeI,OAAQ,kBAAM,kBAAC,GAAD,SAG1C,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,GAAD,YCLtBE,OAnBf,WACI,OAEI,yBAAKlH,UAAWC,IAAEkH,MACd,6BACI,kBAAC,IAAD,CAASF,GAAIL,GAAiBQ,gBAAiBnH,IAAEoH,YAAjD,+CAEJ,6BACI,kBAAC,IAAD,CAASJ,GAAIL,GAAUQ,gBAAiBnH,IAAEoH,YAA1C,6BAEJ,6BACI,kBAAC,IAAD,CAASJ,GAAIL,GAAeQ,gBAAiBnH,IAAEoH,YAA/C,wDCKDC,OAff,WACI,OACI,yBAAKtH,UAAWC,IAAEsH,QAEd,kBAAC,IAAD,KAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,SCQGC,OAdf,WACI,OACI,yBAAKxH,UAAWC,IAAEuH,KACd,iDAKA,kBAAC,GAAD,QCJQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBCZAC,GAAWC,aAAgB,CAC7B1D,QfG0B,WAA0E,IAAzEzC,EAAwE,uDAAhEqB,EAAW+E,EAAqD,uCACnG,OAAQA,EAAOrI,MACX,IAAK,iBACD,OAAO,eAAKiC,EAAZ,CAAoByC,QAAS2D,EAAO3D,UAExC,QAAS,OAAOzC,IePpBF,MnBGwB,WAAoH,IAAnHE,EAAkH,uDAAhFqB,EAAW+E,EAAqE,uCAC3I,OAAQA,EAAOrI,MACX,IAAK,eACD,OAAO,eAAIiC,EAAX,CAAkBC,OAAOmG,EAAOtG,QAEpC,QAAS,OAAOE,ImBPpByD,KbEuB,WAAoF,IAAnFzD,EAAkF,uDAAxDkD,EAAckD,EAA0C,uCAC1G,OAAQA,EAAOrI,MACX,IAAK,cACD,OAAO,eAAIiC,EAAX,CAAkBmD,QAASiD,EAAOjD,UACtC,IAAK,YACD,OAAO,eAAInD,EAAX,CAAkBiC,MAAOmE,EAAOnE,QACpC,QACI,OAAOjC,MaNNqG,GAAQC,aAAYJ,GAAUK,aAAgBC,OAK3DV,OAAOO,MAAQA,GCTfI,IAASrB,OAAO,kBAAC,IAAD,CAAUiB,MAAOA,IAC7B,kBAAC,IAAMK,WAAP,KACI,kBAAC,GAAD,OAFQ,KAIZC,SAASC,eAAe,SF+HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEdhD,OAAM,SAAAhC,GACLmC,QAAQnC,MAAMA,EAAMkC,c","file":"static/js/main.15f70288.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Header_center__Lvs4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__175K9\",\"dark-text\":\"HW12_dark-text__3ZybO\",\"red\":\"HW12_red__OX-Fx\",\"red-text\":\"HW12_red-text__3tGmP\",\"some\":\"HW12_some__28Pzl\",\"some-text\":\"HW12_some-text__1ddOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2poDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2vMR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__bimfY\",\"spanClassName\":\"SuperCheckbox_spanClassName__2gbW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2PwMc\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    value1:number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,value1,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n   /* const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;*/\r\n\r\n    return (\r\n        <div className={s.istyle}>\r\n            <input\r\n                value={value1}\r\n                type={\"range\"}\r\n                aria-valuenow={50}\r\n                onChange={onChangeCallback}\r\n             /*   className={finalRangeClassName}*/\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: number[]) => void\r\n    value1: number\r\n    value2: number\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n\r\n        onChangeRange, value1,value2,\r\n        // min, max, step, disable, ...\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n\r\n    /*const [value, setValue] = React.useState<number[]>([startValue1, startValue2]);*/\r\n\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n       /* setValue(newValue as number[]);*/\r\n        onChangeRange && onChangeRange(newValue as number[])\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n            <div className={classes.root}>\r\n                <Slider\r\n                    value={[value1,value2]}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    getAriaValueText={valuetext}\r\n                />\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from \"react\";\r\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {themeType} from \"../h12/bll/themeReducer\";\r\nimport s from \"../h12/HW12.module.css\";\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(50);\r\n\r\n    const [value2, setValue2] = useState(60);\r\n    const theme = useSelector<AppStoreType, themeType>(state => state.theme.themes)\r\n    const onChangeRange = (val: number) => setValue1(val)\r\n    const onChangeDoubleRange = ([val1, val2]: Array<number>) => {\r\n        setValue1(val1)\r\n        setValue2(val2)\r\n    }\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n            homeworks 11\r\n            </span>\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <div><SuperRange\r\n                    onChangeRange={onChangeRange}\r\n                    value1={value1}\r\n                    // сделать так чтоб value1 изменялось\r\n                /></div>\r\n            </div>\r\n\r\n            <div>\r\n                <span> </span>\r\n                <span>{value1}</span>\r\n                <div><SuperDoubleRange\r\n                    value1={value1}\r\n                    value2={value2}\r\n\r\n\r\n                    onChangeRange={onChangeDoubleRange}\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                /></div>\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW11;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {green} from '@material-ui/core/colors';\r\nimport Radio, {RadioProps} from '@material-ui/core/Radio';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n    value?: any\r\n}\r\nconst GreenRadio = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.defaultValue)// onChange, onChangeOption defaultValue\r\n\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={\"-\" + i}>\r\n            <Radio\r\n                checked={value === o}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                color='primary'\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","\r\nexport type themeType='dark'| 'red'| 'some'\r\nexport type themeReducerInitStateType={\r\n    themes:themeType\r\n}\r\n\r\n\r\nconst initState = {\r\n    themes:'some'as const\r\n}\r\n\r\nexport const themeReducer = (state:themeReducerInitStateType = initState, action: ActionsChangeThemeReducerType): themeReducerInitStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"CHANGE-THEME\": {\r\n            return {...state, themes:action.theme}\r\n        }\r\n        default: return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const changeThemeAC = (theme:themeType) => ({\r\n    type:\"CHANGE-THEME\",\r\n    theme\r\n}) as const ;\r\n\r\nexport type loadingACType= ReturnType<typeof changeThemeAC>\r\ntype ActionsChangeThemeReducerType = loadingACType","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport SuperRadio from \"../h7/common/c6-SuperRadio/SuperRadio\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeThemeAC, themeType} from \"./bll/themeReducer\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nexport interface HW12Props{}\r\nconst themes = ['dark', 'red', 'some'];\r\n\r\nfunction HW12() {\r\n    const dispatch = useDispatch()\r\n    const theme = useSelector<AppStoreType, themeType>(state => state.theme.themes)\r\n    const onChangeOption = (theme: themeType) => {\r\n        dispatch(changeThemeAC(theme))\r\n    }\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks\r\n            </span>\r\n            <SuperRadio\r\n                options={themes}\r\n                onChangeOption={onChangeOption}\r\n                value={theme}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n    checked?:boolean\r\n\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,checked,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)  // сделайте так чтоб работал onChange и\r\n        onChange && onChange(e)\r\n        // onChangeChecked\r\n    }\r\n\r\n    /*const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;*/\r\n\r\n    return (\r\n        <label>\r\n            <Checkbox\r\n                onChange={onChangeCallback}\r\n                checked={checked}\r\n                color=\"primary\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n                // {...restProps}\r\n            />\r\n            {/*   <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />*/}\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    error?: string\r\n    onClick: () => void\r\n     name?:string\r\n    size?: \"small\" | \"medium\" | \"large\" | undefined\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, className, onClick, color,name=\"push\",size=\"medium\",\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = error ? \"secondary\" : 'primary';//,\r\n\r\n    return (\r\n        <Button variant=\"contained\" color={finalClassName} onClick={onClick} style={{margin: \"10px 5px\"}} size={size}\r\n            //  {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{name} </Button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import {Dispatch} from \"redux\";\r\n\r\ntype initStateType ={\r\n    loading:boolean\r\n}\r\n\r\nconst initState = {\r\n    loading:false\r\n};\r\n\r\nexport const loadingReducer = (state = initState, action: ActionsLoadingReducerType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"LOADING-STATUS\": {\r\n            return {...(state), loading: action.loading}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const loadingAC = (loading:boolean) => ({\r\n    type:\"LOADING-STATUS\",\r\n    loading\r\n}) as const ;\r\n\r\n export const loadingTC = () => (dispatch: Dispatch) => {\r\n         dispatch(loadingAC(true))\r\n         setTimeout(()=>{ dispatch(loadingAC(false))}, 2000);\r\n\r\n\r\n }\r\n export type loadingACType= ReturnType<typeof loadingAC>\r\n type ActionsLoadingReducerType = loadingACType","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://neko-cafe-back.herokuapp.com/',\n\n})\n\nexport const RequestAPI = {\n    auth(data: AuthDataType) {\n        return instance.post<ResponseDataAuthType>(`auth/test`, data)\n    }\n\n}\ntype ResponseDataAuthType = {\n\n    errorText: string\n    info: string\n    yourBody:\n        {\n            success: boolean\n        }\n    yourQuery: any\n\n}\ntype AuthDataType = {\n    success:boolean\n}","import {Dispatch} from 'redux'\nimport {loadingAC, loadingACType} from \"../h10/bll/loadingReducer\";\nimport {RequestAPI} from \"./RequestsAPI\";\n\n\nconst initialState = {\n    success:true,\n    error:\"\"\n}\ntype InitialStateType = typeof initialState\n\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SET-SUCCESS':\n            return {...state, success: action.success}\n        case 'SET-ERROR':\n            return {...state, error: action.error}\n        default:\n            return state\n    }\n}\n// actions\nexport const setSuccessAC = (success: boolean) =>\n    ({type: 'SET-SUCCESS', success} as const)\nexport const setErrorAC = (error: string) =>\n    ({type: 'SET-ERROR', error} as const)\n\n// thunks\nexport const setSuccessTC = (success: boolean) => (dispatch: Dispatch<ActionsType>) => {\n    dispatch(loadingAC(true))\n    RequestAPI.auth({success:success})\n        .then(res => {debugger\n            if (res.status === 200) {\n\n                dispatch(setErrorAC(res.data.errorText))\n\n            } else {\n                dispatch(setErrorAC(\"server error\"))\n            }\n        })\n        .catch((error) => {debugger\n            dispatch(setErrorAC(error.response ? error.response.data.errorText : error.message))\n            console.log( {...error} ); console.log( error.response ? error.response.data.errorText : error.message)\n        }).finally(()=> dispatch(loadingAC(false))\n        )\n}\n\n\n\ntype ActionsType = ReturnType<typeof setSuccessAC>|loadingACType|ReturnType<typeof setErrorAC>\n\n\n\n","import React from 'react';\n\n\nlet Preloader = () => {\n    return <div  >\n    <img src=\"https://media.giphy.com/media/wnYB3vx9t6PXiq1ubB/giphy.gif\"  style={ { height: 200 } }/>\n    </div>\n}\n\nexport default Preloader;","import React, {ChangeEvent, useCallback} from \"react\";\n\nimport SuperCheckbox from \"../h4/common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../h10/bll/store\";\nimport {setSuccessAC, setSuccessTC} from \"./auth-reducer\";\nimport Preloader from \"../h10/bll/preloader\";\n\nfunction Request() {\n    const success = useSelector<AppStoreType, boolean>(state => state.auth.success)\n    const loading = useSelector<AppStoreType, boolean>(state => state.loading.loading)\n    const error = useSelector<AppStoreType, string>(state => state.auth.error)\n    const dispatch = useDispatch()\n\n    const onChangeCheckedCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(setSuccessAC(e.currentTarget.checked))\n          },[])\n    const onClickHandler = () => {\n        dispatch(setSuccessTC(success))\n    }\n    return (\n        <div>\n\n            {loading\n                ? (\n                    <Preloader/>\n                ) : (<div>\n                    <SuperCheckbox checked={success} onChange={onChangeCheckedCallback}> </SuperCheckbox>\n                    <SuperButton\n                        onClick={onClickHandler}\n                        name={\"push\"}\n                        size={\"medium\"} />\n                </div>)\n            }\n            {error&&<div>\n            {error}\n            </div>}\n\n\n        </div>\n    );\n}\n\nexport default Request;","import React from \"react\";\nimport Request from \"./Request\";\n\nfunction HW13() {\n\n    return (\n        <>\n        <hr/>\n    <div>\n        homeworks 13\n    </div>\n        <div >\n            < Request/>\n        </div>\n    <hr/>\n        </>\n    );\n}\nexport default HW13;","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW12 from \"../../h12/HW12\";\r\nimport HW13 from \"../../h13/HW13\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n           {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>*/}\r\n            <HW11/>\r\n            <HW12/>\r\n            <HW13/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\"\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div>404</div>\r\n            <img src=\"https://programmist1s.ru/wp-content/uploads/2013/09/Pole-ob'ekta-nedostupno-dlya-zapisi-1S.jpg\"\r\n                 alt=\"альтернативный текст\"/>\r\n            <div>Page not found!</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\n\r\nfunction Jun() {\r\n    return (\r\n        <div style={{textAlign: \"center\", fontSize: \"36px\"}}>\r\n            <div> Я ЕСТЬ ДЖУН </div>\r\n            <img src=\"https://www.okino.ua/media/var/news/2017/08/07/baby_groot.jpg\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jun;\r\n","import React from \"react\";\r\n\r\nfunction JunPlus() {\r\n    return (\r\n        <div style={{textAlign: \"center\", fontSize: \"36px\"}}>\r\n            <div> Я ЕСТЬ ДЖУН++++++++++</div>\r\n            <img src=\"https://www.film.ru/sites/default/files/styles/thumb_og_800x420/public/filefield_paths/maxresdefault_11.jpg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JunPlus;\r\n","import React from \"react\";\r\nimport {Switch, Redirect, Route} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Jun from \"./pages/Jun\";\r\nimport JunPlus from \"./pages/JunPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUN: \"/Jun\",\r\n    JUN_PLUS: \"/JunPlus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                // add routes\r\n                <Route path={PATH.JUN} render={() => <Jun/>}/>\r\n                <Route path={PATH.JUN_PLUS} render={() => <JunPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <div>\r\n                <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.activeLink}>Домашки</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.JUN} activeClassName={s.activeLink}>Джун</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.JUN_PLUS} activeClassName={s.activeLink}>Джун ПЛЮС</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={s.center}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n           {/* <HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n           {/* <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {loadingReducer} from \"./loadingReducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\nimport {authReducer} from \"../../h13/auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n    theme: themeReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode> </Provider>,\r\n    document.getElementById(\"root\")\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}