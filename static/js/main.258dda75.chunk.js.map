{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Jun.tsx","p2-homeworks/h5/pages/JunPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","item","to","activeClassName","activeLink","Message","props","message","avatarArea","avatar","src","containerMessage","name","messages","time","messageData","HW1","Affair","deleteCallback","deleteAffairCallback","affair","_id","priority","onClick","Affairs","mappedAffairs","data","map","a","key","setFilter","filter","defaultAffairs","HW2","useState","affairs","setAffairs","affrairsByFilter","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputArea","value","onChange","onKeyPress","e","charCode","inputClassError","inputClass","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","alert","HW3","setUsers","newUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","errorInput","TextField","id","label","helperText","SuperButton","finalClassName","color","Button","variant","style","margin","SuperCheckbox","onChangeChecked","children","Checkbox","checked","defaultChecked","inputProps","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","restProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","i","SuperRadio","o","arr","HW7","homeWorkReducer","action","payload","sort","b","p","age","sortAC","initialPeople","HW8","people","setPeople","finalPeople","newState","PreJunior","Error404","alt","Jun","textAlign","fontSize","JunPlus","PATH","Routes","path","exact","render","HW5","center","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.258dda75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__17dIt\",\"avatarArea\":\"Message_avatarArea__2MAol\",\"avatar\":\"Message_avatar__2zNAF\",\"containerMessage\":\"Message_containerMessage__18rqm\",\"name\":\"Message_name__1Dena\",\"messages\":\"Message_messages__27TLN\",\"time\":\"Message_time__3DuiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Header_center__Lvs4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"Greeting_inputArea__dyrJL\",\"error\":\"Greeting_error__-ag4h\",\"inputClass\":\"Greeting_inputClass__3Kiws\",\"inputClassError\":\"Greeting_inputClassError__3h62r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1_koQ\",\"errorInput\":\"SuperInputText_errorInput__3p3Ng\",\"error\":\"SuperInputText_error__3UH9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2poDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__LbFwU\",\"column\":\"HW4_column__1P7vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__bimfY\",\"spanClassName\":\"SuperCheckbox_spanClassName__2gbW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__SPJZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2PwMc\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <div>\r\n                <NavLink to=\"/pre-junior\" activeClassName={s.activeLink}>Домашки</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/Jun\" activeClassName={s.activeLink}>Джун</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/JunPlus\" activeClassName={s.activeLink}>Джун ПЛЮС</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from'./Message.module.css'\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatarArea} >\r\n                <img className={s.avatar} src={props.avatar}/>\r\n            </div>\r\n            <div className={s.containerMessage}>\r\n                <div className={s.name}> {props.name}</div>\r\n                <div className={s.messages}> {props.message}</div>\r\n                <div className={s.time}>   {props.time}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n    ;\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Artem\",\r\n    message: \"npm start нажимал?\",\r\n    time: \"20:00\",\r\n};\r\ntype HW1PropsType = { }\r\n\r\nfunction HW1(props:HW1PropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n            {messageData.name}\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n          {/*  <hr/>\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage/>\r\n            <hr/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from './HW2';\r\n/*import any = jasmine.any;*/\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (x:number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = props.deleteAffairCallback;// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair._id} {props.affair.name} {props.affair.priority}\r\n\r\n            <button onClick={() => {\r\n                deleteCallback(props.affair._id)\r\n            }}>X\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    let mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setFilter = (filter: FilterType) => props.setFilter(filter);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={() => {\r\n                setFilter(\"all\")\r\n            }}>All\r\n            </button>\r\n            <button onClick={() => setFilter(\"high\")}>High</button>\r\n            <button onClick={() => setFilter(\"middle\")}>Middle</button>\r\n            <button onClick={() => setFilter(\"low\")}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"; // need to fix any\r\n\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: string\r\n} // need to fix any\r\n\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport let filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === \"high\") {\r\n        return affairs.filter(affairs => affairs.priority === \"high\")\r\n    } else if (filter === \"middle\") {\r\n        return affairs.filter(affairs => affairs.priority === \"middle\")\r\n    } else if (filter === \"low\") {\r\n        return affairs.filter(affairs => affairs.priority === \"low\")\r\n    }\r\n    return affairs\r\n\r\n}\r\nexport let deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    // need to fix any\r\n    return affairs.filter(affairs => affairs._id !== _id);\r\n    /*return;*/ // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    let affrairsByFilter = filterAffairs(affairs, filter)\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={affrairsByFilter}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n\r\n","import React, {useState, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void// need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    // need to fix with (?:)\r\n\r\n    const onPressHandler = ((e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addUser()\r\n        }\r\n    })\r\n    const classNameError = () => (error !== \"\") ? s.inputClassError : s.inputClass\r\n    return (\r\n        <div className={s.inputArea}>\r\n            <div> Return name:</div>\r\n            <input value={name} onChange={setNameCallback}\r\n                   onKeyPress={onPressHandler}\r\n                   className={classNameError()}/>\r\n            <button onClick={addUser}>add\r\n            </button>\r\n\r\n            {error !== \"\" && <div className={s.error}>{error}</div>}\r\n            <div> Number of Users = {totalUsers}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\")\r\n    const [error, setError] = useState<any>(\"\")\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    const addUser = () => {\r\n        if (name.length > 1) {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name} !`); // need to fix\r\n            setName(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            setError(\"the name cannot be shorter than two letters, please enter the correct name\")\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const newUser = {_id: v1(), name: name}\r\n        const newUsers = [newUser, ...users]\r\n        setUsers(newUsers);/*  users.push(name)*/\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {isBoolean} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError, value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        setError && setError(\"\")\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error && `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <TextField\r\n\r\n                value={value}\r\n                id=\"standard-basic\" label=\"SuperInputField\"\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                error={!!error}\r\n                helperText={error}\r\n\r\n            />\r\n\r\n             {/*   <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    error?: string\r\n    onClick: () => void\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, className, onClick, color,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = error ? \"secondary\" : 'primary';//,\r\n\r\n    return (\r\n        <Button variant=\"contained\" color={finalClassName} onClick={onClick} style={{margin: \"10px 0px\"}}\r\n            //  {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >PUSH </Button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)  // сделайте так чтоб работал onChange и\r\n        onChange && onChange(e)\r\n        // onChangeChecked\r\n    }\r\n\r\n    /*const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;*/\r\n\r\n    return (\r\n        <label>\r\n            <Checkbox\r\n                onChange={onChangeCallback}\r\n                defaultChecked\r\n                color=\"primary\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n                // {...restProps}\r\n            />\r\n            {/*   <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />*/}\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\")\r\n    const showAlert = () => {\r\n        if (text) {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            alert(\"введите текст...\");\r\n            setError(\"the field cannot be empty\")\r\n\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    setError={setError}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    error={error} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    PUSH {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = s.span;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <button onClick={save}>save</button>\r\n            <button onClick={restore}>restore</button>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: any[]\r\n    onChangeOption: (option: any) => void\r\n    value:any\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions=options.map(i=><option key={i}>{i}</option>) // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption(e.currentTarget.value)// onChange, onChangeOption\r\n          }\r\n\r\n    return (\r\n        <select value={value} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption: (option: any) => void\r\n    value:any\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChangeOption(e.currentTarget.name)// onChange, onChangeOption\r\n        console.log(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                name={o}\r\n                checked={value===o}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","export type PersonType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\nexport type StateType = Array<PersonType>\r\n\r\nexport const homeWorkReducer = (state: StateType, action: ActionTypeType): StateType => {\r\n    switch (action.type) {\r\n        case \"sort\":\r\n            switch (action.payload) {\r\n                case \"up\":\r\n                                  state.sort(function (a: PersonType, b: PersonType) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        // a должно быть равным b\r\n                        return 0;\r\n                    });return state\r\n                case \"down\":\r\n                    state.sort(function (a: PersonType, b: PersonType) {\r\n                                           if (a.name < b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name > b.name) {\r\n                            return -1;\r\n                        }\r\n                        // a должно быть равным b\r\n                        return 0;\r\n                    });\r\n                    return state\r\n            }\r\n        case \"check\": {\r\n          return   state.filter(p=>p.age>=action.payload)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport type payloadType=\"up\"|\"down\"\r\nexport type sortACType = {\r\n    type: \"sort\"\r\n    payload: payloadType\r\n\r\n}\r\nexport type checkACType = {\r\n    type: \"check\"\r\n    payload:number\r\n}\r\nexport type ActionTypeType=sortACType|checkACType\r\nexport const sortAC = (payload: payloadType): sortACType => {\r\n    return {\r\n        type: 'sort',\r\n        payload: payload,\r\n    }\r\n}\r\nexport const checkAC = (payload:number): checkACType => {\r\n    return {\r\n        type: 'check',\r\n        payload:payload\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {checkAC, homeWorkReducer, sortAC} from \"./bll/homeWorkReducer\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {log} from \"util\";\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: \"Кот\", age: 3},\r\n    {_id: 1, name: \"Александр\", age: 66},\r\n    {_id: 2, name: \"Коля\", age: 16},\r\n    {_id: 3, name: \"Виктор\", age: 44},\r\n    {_id: 4, name: \"Дмитрий\", age: 40},\r\n    {_id: 5, name: \"Ирина\", age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <div key={p._id}>\r\n            name: {p.name}, age: {p.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => {\r\n        const newState = (homeWorkReducer(initialPeople, sortAC(\"up\")))\r\n        setPeople([...newState])\r\n    }\r\n    const sortDown = () => {\r\n        const newState = (homeWorkReducer(initialPeople, sortAC(\"down\")))\r\n        setPeople([...newState])\r\n    }\r\n    const check = () => {\r\n        const newState = (homeWorkReducer(initialPeople, checkAC(18)))\r\n        setPeople([...newState])\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {finalPeople}\r\n            {/* <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>*/}\r\n            <button onClick={sortUp}>sort up</button>\r\n            <button onClick={sortDown}>sort down</button>\r\n            <button onClick={check}> check 18</button>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\"\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div>404</div>\r\n            <img src=\"https://programmist1s.ru/wp-content/uploads/2013/09/Pole-ob'ekta-nedostupno-dlya-zapisi-1S.jpg\"\r\n                 alt=\"альтернативный текст\"/>\r\n            <div>Page not found!</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\n\r\nfunction Jun() {\r\n    return (\r\n        <div style={{textAlign: \"center\", fontSize: \"36px\"}}>\r\n            <div> Я ЕСТЬ ДЖУН </div>\r\n            <img src=\"https://www.okino.ua/media/var/news/2017/08/07/baby_groot.jpg\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jun;\r\n","import React from \"react\";\r\n\r\nfunction JunPlus() {\r\n    return (\r\n        <div style={{textAlign: \"center\", fontSize: \"36px\"}}>\r\n            <div> Я ЕСТЬ ДЖУН++++++++++</div>\r\n            <img src=\"https://www.film.ru/sites/default/files/styles/thumb_og_800x420/public/filefield_paths/maxresdefault_11.jpg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JunPlus;\r\n","import React from \"react\";\r\nimport {Switch, Redirect, Route} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Jun from \"./pages/Jun\";\r\nimport JunPlus from \"./pages/JunPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUN: \"/Jun\",\r\n    JUN_PLUS: \"/JunPlus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                // add routes\r\n                <Route path={PATH.JUN} render={() => <Jun/>}/>\r\n                <Route path={PATH.JUN_PLUS} render={() => <JunPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={s.center}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n           {/* <HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n           {/* <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}