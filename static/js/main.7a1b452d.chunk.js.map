{"version":3,"sources":["p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/preloader.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h13/RequestsAPI.ts","p2-homeworks/h13/auth-reducer.ts","p2-homeworks/h13/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Jun.tsx","p2-homeworks/h5/pages/JunPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/pages/Error404.module.css"],"names":["Message","props","className","s","message","avatarArea","avatar","src","containerMessage","name","messages","time","messageData","HW1","SuperButton","error","onClick","color","size","finalClassName","Button","variant","style","margin","Affair","deleteCallback","deleteAffairCallback","backgroundColor","width","marginLeft","marginRight","fontWeight","border","affair","_id","priority","Affairs","mappedAffairs","data","map","a","key","setFilter","filter","defaultAffairs","HW2","useState","affairs","setAffairs","affrairsByFilter","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","totalUsers","inputArea","value","onChange","onKeyPress","e","charCode","inputClassError","inputClass","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","alert","HW3","setUsers","newUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","errorInput","TextField","id","label","helperText","SuperCheckbox","onChangeChecked","checked","children","Checkbox","inputProps","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","restProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","i","SuperRadio","withStyles","root","green","Radio","onChangeCallback","defaultValue","mappedOptions","o","arr","HW7","homeWorkReducer","action","payload","sort","b","p","age","sortAC","initialPeople","HW8","people","setPeople","finalPeople","newState","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","get2digitString","num","stop","clearInterval","stringTime","getHours","getMinutes","getSeconds","stringDate","toDateString","useEffect","onMouseEnter","onMouseLeave","window","setInterval","HW9","Preloader","height","initState","loading","loadingAC","HW10","dispatch","useDispatch","useSelector","setTimeout","SuperRange","onChangeRange","value1","istyle","aria-valuenow","useStyles","makeStyles","valuetext","SuperDoubleRange","value2","classes","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","HW11","setValue1","setValue2","theme","themes","val","val1","val2","HW12","changeThemeAC","instance","axios","create","baseURL","RequestAPI","post","initialState","success","setErrorAC","Request","auth","onChangeCheckedCallback","useCallback","setSuccessAC","then","res","status","errorText","catch","response","console","log","finally","setSuccessTC","HW13","PreJunior","Error404","alt","Jun","textAlign","fontSize","JunPlus","PATH","Routes","path","exact","render","to","Header","item","activeClassName","activeLink","HW5","center","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"sRA+BeA,MApBf,SAAiBC,GAEb,OACI,yBAAKC,UAAWC,IAAEC,SACd,yBAAKF,UAAWC,IAAEE,YACd,yBAAKH,UAAWC,IAAEG,OAAQC,IAAKN,EAAMK,UAEzC,yBAAKJ,UAAWC,IAAEK,kBACd,yBAAKN,UAAWC,IAAEM,MAAlB,IAA0BR,EAAMQ,MAChC,yBAAKP,UAAWC,IAAEO,UAAlB,IAA8BT,EAAMG,SACpC,yBAAKF,UAAWC,IAAEQ,MAAlB,MAA4BV,EAAMU,SClB5CC,EACM,qFADNA,EAEI,QAFJA,EAGO,wDAHPA,EAII,QA4BKC,MAxBf,SAAaZ,GAET,OACI,6BACI,6BADJ,kHAKKW,EACD,kBAAC,EAAD,CACIN,OAAQM,EACRH,KAAMG,EACNR,QAASQ,EACTD,KAAMC,M,wBCKPE,EAfqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,MAAkBC,GAGrB,EAHUd,UAGV,EAHqBc,SAGrB,KAH8BC,MAG9B,EAHoCR,aAGpC,MAHyC,OAGzC,MAHgDS,YAGhD,MAHqD,SAGrD,EACKC,GADL,qEACsBJ,EAAQ,YAAc,WAE7C,OACI,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYJ,MAAOE,EAAgBH,QAASA,EAASM,MAAO,CAACC,OAAQ,YAAaL,KAAMA,GAEtGT,EAFF,MCSOe,MArBf,SAAgBvB,GACZ,IAAMwB,EAAiBxB,EAAMyB,qBAE7B,OACI,yBAAKJ,MAAO,CAAGK,gBAAiB,UAAWC,MAAO,QAAUC,WAAY,OAAQC,YAAa,OAAOC,WAAY,OAAQC,OAAO,oBAC1H/B,EAAMgC,OAAOC,IADlB,IACwBjC,EAAMgC,OAAOxB,KADrC,IAC4CR,EAAMgC,OAAOE,SAGrD,kBAAC,EAAD,CACIjB,KAAM,QACNF,QAAS,kBAAMS,EAAexB,EAAMgC,OAAOC,MAC3CzB,KAAM,QC+BP2B,MAzCf,SAAiBnC,GAEb,IAAIoC,EAAgBpC,EAAMqC,KAAKC,KAAI,SAACC,GAAD,OAC/B,kBAAC,EAAD,CACIC,IAAKD,EAAEN,IACPD,OAAQO,EACRd,qBAAsBzB,EAAMyB,0BAI9BgB,EAAY,SAACC,GAAD,OAAwB1C,EAAMyC,UAAUC,IAG1D,OACI,6BAEKN,EACD,kBAAC,EAAD,CACIrB,QAAS,WACL0B,EAAU,QAEdjC,KAAM,QACV,kBAAC,EAAD,CACIO,QAAS,kBAAM0B,EAAU,SACzBjC,KAAM,SACV,kBAAC,EAAD,CACIO,QAAS,kBAAM0B,EAAU,WACzBjC,KAAM,WACV,kBAAC,EAAD,CACIO,QAAS,kBAAM0B,EAAU,QACzBjC,KAAM,UC3BhBmC,EAAoC,CACtC,CAACV,IAAK,EAAGzB,KAAM,QAAS0B,SAAU,QAClC,CAACD,IAAK,EAAGzB,KAAM,QAAS0B,SAAU,OAClC,CAACD,IAAK,EAAGzB,KAAM,QAAS0B,SAAU,OAClC,CAACD,IAAK,EAAGzB,KAAM,OAAQ0B,SAAU,QACjC,CAACD,IAAK,EAAGzB,KAAM,aAAc0B,SAAU,WAkD5BU,MA7Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJH,EAFI,KAEID,EAFJ,KAOPO,EAxBmB,SAACF,EAA4BJ,GACpD,MAAe,SAAXA,EACOI,EAAQJ,QAAO,SAAAI,GAAO,MAAyB,SAArBA,EAAQZ,YACvB,WAAXQ,EACAI,EAAQJ,QAAO,SAAAI,GAAO,MAAyB,WAArBA,EAAQZ,YACvB,QAAXQ,EACAI,EAAQJ,QAAO,SAAAI,GAAO,MAAyB,QAArBA,EAAQZ,YAEtCY,EAgBgBG,CAAcH,EAASJ,GAC9C,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CACIL,KAAMW,EACNP,UAAWA,EACXhB,qBAZiB,SAACQ,GAAD,OAAiBc,EAXxB,SAACD,EAA4Bb,GAEnD,OAAOa,EAAQJ,QAAO,SAAAI,GAAO,OAAIA,EAAQb,MAAQA,KASQiB,CAAaJ,EAASb,OAgBvE,6BAGA,+B,yBCzBGkB,EA3B+B,SAAC,GAEzC,IADD3C,EACA,EADAA,KAAM4C,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASvC,EAChC,EADgCA,MAAOwC,EACvC,EADuCA,WAUxC,OACI,yBAAKrD,UAAWC,IAAEqD,WACd,8CACA,2BAAOC,MAAOhD,EAAMiD,SAAUL,EACvBM,WAVS,SAACC,GACF,KAAfA,EAAEC,UACFP,KASOpD,UANyB,KAAVa,EAAgBZ,IAAE2D,gBAAkB3D,IAAE4D,aAO5D,4BAAQ/C,QAASsC,GAAjB,OAGW,KAAVvC,GAAgB,yBAAKb,UAAWC,IAAEY,OAAQA,GAC3C,mDAAyBwC,KCctBS,EAlCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEpB,mBAAiB,IADiD,mBACnFrC,EADmF,KAC7E0D,EAD6E,OAEhErB,mBAAc,IAFkD,mBAEnF/B,EAFmF,KAE5EqD,EAF4E,KAmBpFb,EAAaU,EAAMI,OAEzB,OACI,kBAAC,EAAD,CACI5D,KAAMA,EACN4C,gBArBgB,SAACO,GACrBO,EAAQP,EAAEU,cAAcb,QAqBpBH,QAjBQ,WACR7C,EAAK4D,OAAS,GACdH,EAAgBzD,GAChB8D,MAAM,SAAD,OAAU9D,EAAV,OACL0D,EAAQ,IACRC,EAAS,KAETA,EAAS,+EAWTrD,MAAOA,EACPwC,WAAYA,K,SCNTiB,MAxBf,WAAgB,IAAD,EACe1B,mBAA0B,IADzC,mBACJmB,EADI,KACGQ,EADH,KASX,OACI,6BACI,6BADJ,cAII,kBAAC,EAAD,CAAmBR,MAAOA,EAAOC,gBAXjB,SAACzD,GACrB,IACMiE,EAAQ,CADE,CAACxC,IAAKyC,cAAMlE,KAAMA,IACpB,mBAAgBwD,IAC9BQ,EAASC,MAUL,6BAGA,+B,0BC2CGE,EAvD2C,SAAC,GAWtD,EATGC,KASF,IAREnB,EAQH,EARGA,SAAUoB,EAQb,EARaA,aACVnB,EAOH,EAPGA,WAAYoB,EAOf,EAPeA,QACZhE,EAMH,EANGA,MACAb,EAKH,EALGA,UAAW8E,EAKd,EALcA,cACXZ,EAIH,EAJGA,SAAUX,EAIb,EAJaA,MAIb,gIAeuB,UAAMtD,IAAEY,MAAR,YAAiBiE,GAAgC,IAC7CjE,GAAK,UAAOZ,IAAE8E,WAAT,YAAuB/E,GACxD,OACI,oCACI,kBAACgF,EAAA,EAAD,CAEIzB,MAAOA,EACP0B,GAAG,iBAAiBC,MAAM,kBAC1BP,KAAM,OACNnB,SAvBa,SAACE,GACtBF,GACGA,EAASE,GAEZkB,GAAgBA,EAAalB,EAAEU,cAAcb,QAoBrCE,WAlBe,SAACC,GACxBD,GAAcA,EAAWC,GACzBQ,GAAYA,EAAS,IACX,UAAVR,EAAEnB,KACCsC,GACAA,KAcKhE,QAASA,EACTsE,WAAYtE,M,2CCFbuE,EAvCyC,SAAC,GASpD,EAPGT,KAOF,IANEnB,EAMH,EANGA,SAAU6B,EAMb,EANaA,gBACeC,GAK5B,EALGtF,UAKH,EALc8E,cAKd,EAL4BQ,SACzBC,EAIH,EAJGA,SAIH,sGASD,OACI,+BACI,kBAACC,EAAA,EAAD,CACIhC,SAXa,SAACE,GACtB2B,GAAmBA,EAAgB3B,EAAEU,cAAckB,SACnD9B,GAAYA,EAASE,IAUb4B,QAASA,EACTvE,MAAM,UACN0E,WAAY,CAAC,aAAc,wBAU9BF,GAAY,0BAAMvF,UAAWC,IAAE6E,eAAgBS,KCuB7CG,MAlEf,WAAgB,IAAD,EACa9C,mBAAiB,IAD9B,mBACJ+C,EADI,KACEC,EADF,OAEehD,mBAAiB,IAFhC,mBAEJ/B,EAFI,KAEGqD,EAFH,KAGL2B,EAAY,WACVF,GACAtB,MAAMsB,GACNC,EAAQ,IACR1B,EAAS,MAETG,MAAM,gFACNH,EAAS,+BAVN,EAemBtB,oBAAkB,GAfrC,mBAeJ0C,EAfI,KAeKQ,EAfL,KAkBX,OACI,6BACI,6BADJ,cAII,yBAAK9F,UAAWC,IAAE8F,QAEd,kBAAC,EAAD,CACIxC,MAAOoC,EACPf,aAAcgB,EACdf,QAASgB,EACThF,MAAOA,EACPqD,SAAUA,IAKd,kBAAC,EAAD,CACIrD,MAAOA,EACPC,QAAS+E,EACTtF,KAAM,OACNS,KAAM,WAMV,kBAAC,EAAD,CACIsE,QAASA,EACTD,gBAAiBS,GAFrB,cAQA,kBAAC,EAAD,CAAeR,QAASA,EAAS9B,SArCxB,SAACE,GAAD,OAAsCoC,EAAWpC,EAAEU,cAAckB,aAwC9E,6BAKA,+B,iBCWGU,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACArB,EAKH,EALGA,QACAsB,EAIH,EAJGA,UAEGC,EAEN,8DAC+BxD,oBAAkB,GADjD,mBACMyD,EADN,KACgBC,EADhB,OAE8DH,GAAa,GAArEZ,EAFN,EAEMA,SAAUgB,EAFhB,EAEgBA,cAA6BC,GAF7C,EAE+BxG,UAF/B,yDAoBK8E,EAAgB7E,IAAEwG,KAExB,OACI,oCACKJ,EAEO,kBAAC,EAAD,eACIJ,WAAS,EACTC,OAnBG,SAACxC,GACpB4C,GAAY,GAEZJ,GAAUA,EAAOxC,IAiBDmB,QAzBI,WACpByB,GAAY,GAEZzB,GAAWA,MAwBSuB,IAGR,wCACIG,cArBU,SAAC7C,GAC3B4C,GAAY,GAEZC,GAAiBA,EAAc7C,IAmBf1D,UAAW8E,GAEP0B,GAGHjB,GAAYa,EAAU7C,SCpExC,SAASmD,EAAanE,EAAaoE,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQzE,EAAKqE,GAIvB,SAASK,EAAgB1E,EAAa2E,GACzC,IAAMN,EAAgBG,aAAaI,QAAQ5E,GAE3C,OADsB,OAAlBqE,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EAWXR,EAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,EAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,ICmBrDC,MAvCf,WAAgB,IAAD,EACe3E,mBAAiB,IADhC,mBACJW,EADI,KACGiE,EADH,KAUX,OACI,6BACI,6BADJ,cAII,6BACI,kBAAC,EAAD,CACIjE,MAAOA,EACPqB,aAAc4C,EACdrB,UAAW,CAACZ,SAAUhC,OAAQkE,EAAY,oBAGlD,kBAAC,EAAD,CACI3G,QApBC,WACT4F,EAAkB,sBAAuBnD,IAoBjChD,KAAM,SACV,kBAAC,EAAD,CACIO,QApBI,WACZ0G,EAASP,EAAa,sBAAuB,MAoBrC1G,KAAM,YAIV,6BAGA,+BCJGmH,G,MAtBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QAIH,EAJWpE,MAIX,EAHGC,SAGH,EAHaoE,eAGb,+DACmBD,EAAQtF,KAAI,SAAAwF,GAAC,OAAE,4BAAQtF,IAAKsF,GAAIA,Q,2BCqCzCC,IA7CIC,aAAW,CAC1BC,KAAM,CACFjH,MAAOkH,KAAM,KACb,YAAa,CACTlH,MAAOkH,KAAM,OAGrB3C,QAAS,IAPMyC,EAQhB,SAAChI,GAAD,OAAuB,kBAACmI,GAAA,EAAD,eAAOnH,MAAM,WAAchB,OAEH,SAAC,GAO9C,EALG4E,KAKF,IAJEgD,EAIH,EAJGA,QAASpE,EAIZ,EAJYA,MACCqE,GAGb,EAHGpE,SAGH,EAHaoE,gBAKRO,GAFL,sEAEwB,SAACzE,GAEtBkE,GAAkBA,EAAelE,EAAEU,cAAcgE,gBAI/CC,EAAuBV,EAAUA,EAAQtF,KAAI,SAACiG,EAAGT,GAAJ,OAC/C,2BAAOtF,IAAK,IAAMsF,GACd,kBAACK,GAAA,EAAD,CACI5C,QAAS/B,IAAU+E,EACnB9E,SAAU2E,EACV5E,MAAO+E,EACPvH,MAAM,YAGTuH,MAEJ,GAEL,OACI,oCACKD,KChDPE,GAAM,CAAC,IAAK,IAAK,KAoCRC,OAlCf,WAAgB,IAAD,EACqB5F,mBAAS2F,GAAI,IADlC,mBACJhF,EADI,KACGqE,EADH,KAGX,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACID,QAASY,GACThF,MAAOA,EACPqE,eAAgBA,KAGxB,6BACI,kBAAC,GAAD,CACIrH,KAAM,QACNoH,QAASY,GACThF,MAAOA,EACPqE,eAAgBA,KAIxB,6BAIA,+BC5BCa,GAAkB,SAAC9B,EAAkB+B,GAC9C,OAAQA,EAAO/D,MACX,IAAK,OACD,OAAQ+D,EAAOC,SACX,IAAK,KAUD,OATAhC,EAAMiC,MAAK,SAAUtG,EAAeuG,GAChC,OAAIvG,EAAE/B,KAAOsI,EAAEtI,KACJ,EAEP+B,EAAE/B,KAAOsI,EAAEtI,MACH,EAEL,KAEJoG,EACX,IAAK,OAWD,OAVAA,EAAMiC,MAAK,SAAUtG,EAAeuG,GAChC,OAAIvG,EAAE/B,KAAOsI,EAAEtI,KACJ,EAEP+B,EAAE/B,KAAOsI,EAAEtI,MACH,EAGL,KAEJoG,EAEnB,IAAK,QACD,OAAOA,EAAMlE,QAAO,SAAAqG,GAAC,OAAIA,EAAEC,KAAOL,EAAOC,WAE7C,QACI,OAAOhC,IAcNqC,GAAS,SAACL,GACnB,MAAO,CACHhE,KAAM,OACNgE,QAASA,ICnDXM,GAAgB,CAClB,CAACjH,IAAK,EAAGzB,KAAM,qBAAOwI,IAAK,GAC3B,CAAC/G,IAAK,EAAGzB,KAAM,yDAAawI,IAAK,IACjC,CAAC/G,IAAK,EAAGzB,KAAM,2BAAQwI,IAAK,IAC5B,CAAC/G,IAAK,EAAGzB,KAAM,uCAAUwI,IAAK,IAC9B,CAAC/G,IAAK,EAAGzB,KAAM,6CAAWwI,IAAK,IAC/B,CAAC/G,IAAK,EAAGzB,KAAM,iCAASwI,IAAK,KAyDlBG,OAtDf,WAAgB,IAAD,EACiBtG,mBAASqG,IAD1B,mBACJE,EADI,KACIC,EADJ,KAGLC,EAAcF,EAAO9G,KAAI,SAAAyG,GAAC,OAC5B,yBAAKvG,IAAKuG,EAAE9G,KAAZ,SACW8G,EAAEvI,KADb,UAC0BuI,EAAEC,QAkBhC,OACI,6BACI,6BADJ,cAMKM,EAED,kBAAC,EAAD,CACIvI,QAxBG,WACX,IAAMwI,EAAYb,GAAgBQ,GAAeD,GAAO,OACxDI,EAAU,YAAIE,KAuBN/I,KAAM,YACV,kBAAC,EAAD,CACIO,QAvBK,WACb,IAAMwI,EAAYb,GAAgBQ,GAAeD,GAAO,SACxDI,EAAU,YAAIE,KAsBN/I,KAAM,cACV,kBAAC,EAAD,CACIO,QAtBE,WACV,IAAMwI,EAAYb,GAAgBQ,GD4B/B,CACHtE,KAAM,QACNgE,QC9ByD,KACzDS,EAAU,YAAIE,KAqBN/I,KAAM,aAMV,6BAGA,+BCSGgJ,OA7Df,WAAkB,IAAD,EACiB3G,mBAAiB,GADlC,mBACN4G,EADM,KACGC,EADH,OAEW7G,mBAAe,IAAI8G,MAF9B,mBAENC,EAFM,KAEAC,EAFA,OAGWhH,oBAAkB,GAH7B,mBAGNiH,EAHM,KAGAC,EAHA,KAIPC,EAAkB,SAACC,GAAD,OAAiBA,EAAM,GAAK,IAAMA,EAAMA,GAC1DC,EAAO,WACTC,cAAcV,IAiBZW,EAAaJ,EAAe,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMS,YAAc,IACjDL,EAAe,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMU,cAAgB,IACtCN,EAAe,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMW,cACtBC,EAAU,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAMa,eAQzB,OALAC,qBAAU,WACF,OAAOR,MAET,IAGF,6BACI,yBAAK7I,MAAO,CAAGK,gBAAiB,UAAWC,MAAO,QAAUC,WAAY,OAAQC,YAAa,OAAOC,WAAY,OAAQC,OAAO,mBAC3H4I,aArBS,WACjBZ,GAAQ,IAqBAa,aAnBS,WACjBb,GAAQ,KAgBJ,SAIWK,GAGVN,GACG,sCACWU,GAGf,kBAAC,EAAD,CACIzJ,QAzCE,WACVmJ,IACA,IAAMhF,EAAa2F,OAAOC,aAAY,WAClCjB,EAAQ,IAAIF,QACb,KACHD,EAAWxE,IAqCH1E,KAAM,UACV,kBAAC,EAAD,CACIO,QAASmJ,EACT1J,KAAM,WC5CPuK,OAjBf,WACI,OACI,6BACI,6BADJ,cAKI,kBAAC,GAAD,MAEA,6BAGA,+B,SCNGC,GANC,WACZ,OAAO,6BACP,yBAAK1K,IAAI,6DAA8De,MAAQ,CAAE4J,OAAQ,S,SCCvFC,GAAY,CACdC,SAAQ,GAYCC,GAAY,SAACD,GAAD,MAAsB,CAC3CvG,KAAK,iBACLuG,YCgBWE,OA9Bf,WACI,IAAMC,EAAWC,eACXJ,EAAUK,cAAmC,SAAA5E,GAAK,OAAIA,EAAMuE,QAAQA,WAM1E,OACI,6BACI,6BADJ,eAIQA,EAEI,kBAAC,GAAD,MAEA,6BACI,kBAAC,EAAD,CAAapK,QAdd,WACfuK,GDYwB,SAACA,GACxBA,EAASF,IAAU,IACnBK,YAAW,WAAMH,EAASF,IAAU,MAAU,UCD/B,mBAIZ,6BAGA,+B,oBCaGM,GAhCmC,SAAC,GAQ9C,EANG9G,KAMF,IALEnB,EAKH,EALGA,SAAUkI,EAKb,EALaA,cAAcC,EAK3B,EAL2BA,OAGrBvF,GAEN,EAJGpG,UAIH,yEASD,OACI,yBAAKA,UAAWC,KAAE2L,QACd,yCACIrI,MAAOoI,EACPhH,KAAM,QACNkH,gBAAe,GACfrI,SAda,SAACE,GACtBF,GAAYA,EAASE,GAErBgI,GAAiBA,GAAehI,EAAEU,cAAcb,SAcpC6C,M,oBCnCd0F,GAAYC,aAAW,CACzB/D,KAAM,CACFtG,MAAO,IACPL,OAAQ,UAIhB,SAAS2K,GAAUzI,GACf,MAAM,GAAN,OAAUA,EAAV,SAUJ,IAqCe0I,GArC+C,SAAC,GAQzD,IALEP,EAKH,EALGA,cAAeC,EAKlB,EALkBA,OAAOO,EAKzB,EALyBA,OAkBpBC,GAbL,mDAaeL,MAChB,OAEQ,yBAAK9L,UAAWmM,EAAQnE,MACpB,kBAACoE,GAAA,EAAD,CACI7I,MAAO,CAACoI,EAAOO,GACf1I,SAXK,SAAC6I,EAAYC,GAE9BZ,GAAiBA,EAAcY,IAUnBC,kBAAkB,OAClBC,kBAAgB,eAChBC,iBAAkBT,O,oBCKvBU,OAjDf,WAAiB,IAAD,EACgB9J,mBAAS,IADzB,mBACL+I,EADK,KACGgB,EADH,OAGgB/J,mBAAS,IAHzB,mBAGLsJ,EAHK,KAGGU,EAHH,KAINC,EAAQtB,cAAqC,SAAA5E,GAAK,OAAIA,EAAMkG,MAAMC,UAMxE,OACI,yBAAK9M,UAAWC,KAAE4M,IACd,6BACA,0BAAM7M,UAAWC,KAAE4M,EAAQ,UAA3B,gBAIA,6BACI,8BAAOlB,GACP,6BAAK,kBAAC,GAAD,CACDD,cAfM,SAACqB,GAAD,OAAiBJ,EAAUI,IAgBjCpB,OAAQA,MAKhB,6BACI,mCACA,8BAAOA,GACP,6BAAK,kBAAC,GAAD,CACDA,OAAQA,EACRO,OAAQA,EAGRR,cA5BY,SAAC,GAAiC,IAAD,mBAA/BsB,EAA+B,KAAzBC,EAAyB,KACzDN,EAAUK,GACVJ,EAAUK,OA6BF,8BAAOf,IAGX,6BAIA,+BC7CNjB,GAAY,CACd6B,OAAO,QCDLA,GAAS,CAAC,OAAQ,MAAO,QAwBhBI,OAtBf,WACI,IAAM7B,EAAWC,eACXuB,EAAQtB,cAAqC,SAAA5E,GAAK,OAAIA,EAAMkG,MAAMC,UAIxE,OACI,yBAAK9M,UAAWC,KAAE4M,IACd,6BACA,0BAAM7M,UAAWC,KAAE4M,EAAQ,UAA3B,aAGA,kBAAC,GAAD,CACIlF,QAASmF,GACTlF,eAXW,SAACiF,GACpBxB,EDSqB,SAACwB,GAAD,MAAsB,CAC/ClI,KAAK,eACLkI,SCXaM,CAAcN,KAWftJ,MAAOsJ,IAEX,+B,SCxBNO,G,QAAWC,EAAMC,OAAO,CAC1BC,QAAS,0CAIAC,GAAa,SACjBpL,GACD,OAAOgL,GAASK,KAAT,YAAiDrL,ICJ1DsL,GAAe,CACjBC,SAAQ,EACR9M,MAAM,IAiBG+M,GAAa,SAAC/M,GAAD,MACrB,CAAC8D,KAAM,YAAa9D,UCmBVgN,OAnCf,WACI,IAAMF,EAAUpC,cAAmC,SAAA5E,GAAK,OAAIA,EAAMmH,KAAKH,WACjEzC,EAAUK,cAAmC,SAAA5E,GAAK,OAAIA,EAAMuE,QAAQA,WACpErK,EAAQ0K,cAAkC,SAAA5E,GAAK,OAAIA,EAAMmH,KAAKjN,SAC9DwK,EAAWC,eAEXyC,EAA0BC,uBAAY,SAACtK,GACzC2H,EDMoB,SAACsC,GAAD,MACvB,CAAChJ,KAAM,cAAegJ,WCPVM,CAAavK,EAAEU,cAAckB,YAClC,IAIR,OACI,6BAEK4F,EAEO,kBAAC,GAAD,MACC,6BACD,kBAAC,EAAD,CAAe5F,QAASqI,EAASnK,SAAUuK,GAA3C,KACA,kBAAC,EAAD,CACIjN,QAZG,WACnBuK,EDSoB,SAACsC,GAAD,OAAsB,SAACtC,GAC/CA,EAASF,IAAU,IACnBqC,GAAgB,CAACG,QAAQA,IACpBO,MAAK,SAAAC,GACiB,MAAfA,EAAIC,OAEJ/C,EAASuC,GAAWO,EAAI/L,KAAKiM,YAG7BhD,EAASuC,GAAW,oBAG3BU,OAAM,SAACzN,GACJwK,EAASuC,GAAW/M,EAAM0N,SAAW1N,EAAM0N,SAASnM,KAAKiM,UAAYxN,EAAMX,UAC3EsO,QAAQC,IAAR,gBAAiB5N,IAAU2N,QAAQC,IAAK5N,EAAM0N,SAAW1N,EAAM0N,SAASnM,KAAKiM,UAAYxN,EAAMX,YAChGwO,SAAQ,kBAAKrD,EAASF,IAAU,QCxB1BwD,CAAahB,KAYNpN,KAAM,OACNS,KAAM,YAGjBH,GAAO,6BACPA,KClBE+N,OAff,WAEI,OACI,oCACA,6BACJ,6CAGI,6BACI,kBAAE,GAAF,OAER,+BCmBWC,OAnBf,WACI,OACI,iCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,oBCdGC,OAXf,WACI,OACI,yBAAK9O,UAAWC,KAAEY,OACd,oCACA,yBAAKR,IAAI,iGACJ0O,IAAI,wHACT,kDCEGC,OATf,WACI,OACI,yBAAK5N,MAAO,CAAC6N,UAAW,SAAUC,SAAU,SACxC,2FACA,yBAAK7O,IAAI,oECKN8O,OATf,WACI,OACI,yBAAK/N,MAAO,CAAC6N,UAAW,SAAUC,SAAU,SACxC,oGACA,yBAAK7O,IAAI,kHCCR+O,GACG,cADHA,GAEJ,OAFIA,GAGC,WA0BCC,OAtBf,WACI,OACI,6BAEI,kBAAC,IAAD,KAGI,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIL,QAEpD,kBAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,kBAAC,GAAD,SALhD,gBAOI,kBAAC,IAAD,CAAOF,KAAMF,GAAUI,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOF,KAAMF,GAAeI,OAAQ,kBAAM,kBAAC,GAAD,SAG1C,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,GAAD,YCLtBE,OAnBf,WACI,OAEI,yBAAK1P,UAAWC,IAAE0P,MACd,6BACI,kBAAC,IAAD,CAASF,GAAIL,GAAiBQ,gBAAiB3P,IAAE4P,YAAjD,+CAEJ,6BACI,kBAAC,IAAD,CAASJ,GAAIL,GAAUQ,gBAAiB3P,IAAE4P,YAA1C,6BAEJ,6BACI,kBAAC,IAAD,CAASJ,GAAIL,GAAeQ,gBAAiB3P,IAAE4P,YAA/C,wDCKDC,OAff,WACI,OACI,yBAAK9P,UAAWC,IAAE8P,QAEd,kBAAC,IAAD,KAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,SCQGC,OAdf,WACI,OACI,yBAAKhQ,UAAWC,IAAE+P,KACd,iDAKA,kBAAC,GAAD,QCJQC,QACW,cAA7BrF,OAAOsF,SAASC,UAEe,UAA7BvF,OAAOsF,SAASC,UAEhBvF,OAAOsF,SAASC,SAASC,MACvB,2D,sBCZAC,GAAWC,aAAgB,CAC7BpF,QpBG0B,WAA0E,IAAzEvE,EAAwE,uDAAhEsE,GAAWvC,EAAqD,uCACnG,OAAQA,EAAO/D,MACX,IAAK,iBACD,OAAO,gBAAKgC,EAAZ,CAAoBuE,QAASxC,EAAOwC,UAExC,QAAS,OAAOvE,IoBPpBkG,MfGwB,WAAoH,IAAnHlG,EAAkH,uDAAhFsE,GAAWvC,EAAqE,uCAC3I,OAAQA,EAAO/D,MACX,IAAK,eACD,OAAO,gBAAIgC,EAAX,CAAkBmG,OAAOpE,EAAOmE,QAEpC,QAAS,OAAOlG,IePpBmH,KZEuB,WAAoF,IAAnFnH,EAAkF,uDAAxD+G,GAAchF,EAA0C,uCAC1G,OAAQA,EAAO/D,MACX,IAAK,cACD,OAAO,gBAAIgC,EAAX,CAAkBgH,QAASjF,EAAOiF,UACtC,IAAK,YACD,OAAO,gBAAIhH,EAAX,CAAkB9F,MAAO6H,EAAO7H,QACpC,QACI,OAAO8F,MYNN4J,GAAQC,aAAYH,GAAUI,aAAgBC,OAK3D9F,OAAO2F,MAAQA,GCTfI,IAASnB,OAAO,kBAAC,KAAD,CAAUe,MAAOA,IAC7B,kBAAC,IAAMK,WAAP,KACI,kBAAC,GAAD,OAFQ,KAIZC,SAASC,eAAe,SF+HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEd7C,OAAM,SAAAzN,GACL2N,QAAQ3N,MAAMA,EAAMX,a,mBGhJ5BkR,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,iBAAmB,kCAAkC,KAAO,sBAAsB,SAAW,0BAA0B,KAAO,wB,mBCA7PD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAY,wBAAwB,IAAM,kBAAkB,WAAW,uBAAuB,KAAO,mBAAmB,YAAY,0B,mBCAhLD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,WAAa,6BAA6B,gBAAkB,oC,mBCAtJD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,mBCApDD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,KAAO,kC,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.7a1b452d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from'./Message.module.css'\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatarArea} >\r\n                <img className={s.avatar} src={props.avatar}/>\r\n            </div>\r\n            <div className={s.containerMessage}>\r\n                <div className={s.name}> {props.name}</div>\r\n                <div className={s.messages}> {props.message}</div>\r\n                <div className={s.time}>   {props.time}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n    ;\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Artem\",\r\n    message: \"npm start нажимал?\",\r\n    time: \"20:00\",\r\n};\r\ntype HW1PropsType = { }\r\n\r\nfunction HW1(props:HW1PropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n            {messageData.name}\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n          {/*  <hr/>\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage/>\r\n            <hr/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    error?: string\r\n    onClick: () => void\r\n     name?:string\r\n    size?: \"small\" | \"medium\" | \"large\" | undefined\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, className, onClick, color,name=\"push\",size=\"medium\",\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = error ? \"secondary\" : 'primary';//,\r\n\r\n    return (\r\n        <Button variant=\"contained\" color={finalClassName} onClick={onClick} style={{margin: \"10px 5px\"}} size={size}\r\n            //  {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{name} </Button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport {AffairType} from './HW2';\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n/*import any = jasmine.any;*/\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (x:number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = props.deleteAffairCallback;// need to fix\r\n\r\n    return (\r\n        <div style={{  backgroundColor: \"#1affb2\", width: \"500px\",  marginLeft: \"auto\", marginRight: \"auto\",fontWeight: \"bold\", border:\"1px solid black\"}}>\r\n            {props.affair._id} {props.affair.name} {props.affair.priority}\r\n\r\n\r\n            <SuperButton\r\n                size={\"small\"}\r\n                onClick={() => deleteCallback(props.affair._id)}\r\n                name={\"X\"}    />\r\n\r\n           {/* <button onClick={() => {\r\n                deleteCallback(props.affair._id)\r\n            }}>X\r\n            </button>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    let mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setFilter = (filter: FilterType) => props.setFilter(filter);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n            <SuperButton\r\n                onClick={() => {\r\n                    setFilter(\"all\")\r\n                }}\r\n                name={\"All\"}/>\r\n            <SuperButton\r\n                onClick={() => setFilter(\"high\")}\r\n                name={\"High\"}/>\r\n            <SuperButton\r\n                onClick={() => setFilter(\"middle\")}\r\n                name={\"Middle\"}/>\r\n            <SuperButton\r\n                onClick={() => setFilter(\"low\")}\r\n                name={\"Low\"}/>\r\n\r\n\r\n            {/*  <button onClick={() => {setFilter(\"all\")}}>All </button>\r\n            <button onClick={() => setFilter(\"high\")}>High</button>\r\n            <button onClick={() => setFilter(\"middle\")}>Middle</button>\r\n            <button onClick={() => setFilter(\"low\")}>Low</button>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"; // need to fix any\r\n\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: string\r\n} // need to fix any\r\n\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport let filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === \"high\") {\r\n        return affairs.filter(affairs => affairs.priority === \"high\")\r\n    } else if (filter === \"middle\") {\r\n        return affairs.filter(affairs => affairs.priority === \"middle\")\r\n    } else if (filter === \"low\") {\r\n        return affairs.filter(affairs => affairs.priority === \"low\")\r\n    }\r\n    return affairs\r\n\r\n}\r\nexport let deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    // need to fix any\r\n    return affairs.filter(affairs => affairs._id !== _id);\r\n    /*return;*/ // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    let affrairsByFilter = filterAffairs(affairs, filter)\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={affrairsByFilter}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n\r\n","import React, {useState, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void// need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    // need to fix with (?:)\r\n\r\n    const onPressHandler = ((e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addUser()\r\n        }\r\n    })\r\n    const classNameError = () => (error !== \"\") ? s.inputClassError : s.inputClass\r\n    return (\r\n        <div className={s.inputArea}>\r\n            <div> Return name:</div>\r\n            <input value={name} onChange={setNameCallback}\r\n                   onKeyPress={onPressHandler}\r\n                   className={classNameError()}/>\r\n            <button onClick={addUser}>add\r\n            </button>\r\n\r\n            {error !== \"\" && <div className={s.error}>{error}</div>}\r\n            <div> Number of Users = {totalUsers}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\")\r\n    const [error, setError] = useState<any>(\"\")\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    const addUser = () => {\r\n        if (name.length > 1) {\r\n            addUserCallback(name)\r\n            alert(`Hello ${name} !`); // need to fix\r\n            setName(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            setError(\"the name cannot be shorter than two letters, please enter the correct name\")\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const newUser = {_id: v1(), name: name}\r\n        const newUsers = [newUser, ...users]\r\n        setUsers(newUsers);/*  users.push(name)*/\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {isBoolean} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError, value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        setError && setError(\"\")\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error && `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <TextField\r\n\r\n                value={value}\r\n                id=\"standard-basic\" label=\"SuperInputField\"\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                error={!!error}\r\n                helperText={error}\r\n\r\n            />\r\n\r\n             {/*   <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n    checked?:boolean\r\n\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,checked,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)  // сделайте так чтоб работал onChange и\r\n        onChange && onChange(e)\r\n        // onChangeChecked\r\n    }\r\n\r\n    /*const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;*/\r\n\r\n    return (\r\n        <label>\r\n            <Checkbox\r\n                onChange={onChangeCallback}\r\n                checked={checked}\r\n                color=\"primary\"\r\n                inputProps={{'aria-label': 'secondary checkbox'}}\r\n                // {...restProps}\r\n            />\r\n            {/*   <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />*/}\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\")\r\n    const showAlert = () => {\r\n        if (text) {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            alert(\"введите текст...\");\r\n            setError(\"the field cannot be empty\")\r\n\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    setError={setError}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    error={error} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    name={\"push\"}\r\n                    size={\"medium\"}\r\n                />\r\n\r\n\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = s.span;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton\r\n                onClick={save}\r\n                name={\"save\"}  />\r\n            <SuperButton\r\n                onClick={restore}\r\n                name={\"restore\"}  />\r\n           {/* <button onClick={save}>save</button>\r\n            <button onClick={restore}>restore</button>*/}\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\nimport Select from '@material-ui/core/Select';\r\nimport {NativeSelect} from \"@material-ui/core\";\r\n\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: any[]\r\n    onChangeOption: (option: any) => void\r\n    value:any\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions=options.map(i=><option key={i}>{i}</option>) // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption(e.currentTarget.value)// onChange, onChangeOption\r\n          }\r\n\r\n\r\n    return (\r\n        // @ts-ignore\r\n        <NativeSelect  native value={value} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </NativeSelect>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {green} from '@material-ui/core/colors';\r\nimport Radio, {RadioProps} from '@material-ui/core/Radio';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n    value?: any\r\n}\r\nconst GreenRadio = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.defaultValue)// onChange, onChangeOption defaultValue\r\n\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={\"-\" + i}>\r\n            <Radio\r\n                checked={value === o}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                color='primary'\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","export type PersonType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\nexport type StateType = Array<PersonType>\r\n\r\nexport const homeWorkReducer = (state: StateType, action: ActionTypeType): StateType => {\r\n    switch (action.type) {\r\n        case \"sort\":\r\n            switch (action.payload) {\r\n                case \"up\":\r\n                    state.sort(function (a: PersonType, b: PersonType) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    return state\r\n                case \"down\":\r\n                    state.sort(function (a: PersonType, b: PersonType) {\r\n                        if (a.name < b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name > b.name) {\r\n                            return -1;\r\n                        }\r\n                        // a должно быть равным b\r\n                        return 0;\r\n                    });\r\n                    return state\r\n            }\r\n        case \"check\": {\r\n            return state.filter(p => p.age >= action.payload)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport type payloadType = \"up\" | \"down\"\r\nexport type sortACType = {\r\n    type: \"sort\"\r\n    payload: payloadType\r\n\r\n}\r\nexport type checkACType = {\r\n    type: \"check\"\r\n    payload: number\r\n}\r\nexport type ActionTypeType = sortACType | checkACType\r\nexport const sortAC = (payload: payloadType): sortACType => {\r\n    return {\r\n        type: 'sort',\r\n        payload: payload,\r\n    }\r\n}\r\nexport const checkAC = (payload: number): checkACType => {\r\n    return {\r\n        type: 'check',\r\n        payload: payload\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {checkAC, homeWorkReducer, sortAC} from \"./bll/homeWorkReducer\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {log} from \"util\";\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: \"Кот\", age: 3},\r\n    {_id: 1, name: \"Александр\", age: 66},\r\n    {_id: 2, name: \"Коля\", age: 16},\r\n    {_id: 3, name: \"Виктор\", age: 44},\r\n    {_id: 4, name: \"Дмитрий\", age: 40},\r\n    {_id: 5, name: \"Ирина\", age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <div key={p._id}>\r\n            name: {p.name}, age: {p.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => {\r\n        const newState = (homeWorkReducer(initialPeople, sortAC(\"up\")))\r\n        setPeople([...newState])\r\n    }\r\n    const sortDown = () => {\r\n        const newState = (homeWorkReducer(initialPeople, sortAC(\"down\")))\r\n        setPeople([...newState])\r\n    }\r\n    const check = () => {\r\n        const newState = (homeWorkReducer(initialPeople, checkAC(18)))\r\n        setPeople([...newState])\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {finalPeople}\r\n            {/* <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>*/}\r\n            <SuperButton\r\n                onClick={sortUp}\r\n                name={\"sort up\"}    />\r\n            <SuperButton\r\n                onClick={sortDown}\r\n                name={\"sort down\"}    />\r\n            <SuperButton\r\n                onClick={check}\r\n                name={\"check 18\"}    />\r\n            {/*<button onClick={sortUp}>sort up</button>\r\n            <button onClick={sortDown}>sort down</button>\r\n            <button onClick={check}> check 18</button>*/}\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nconst style= {\r\n    backgroundColor: \"#1affb2\",\r\n    width: \"200px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    fontWeight: \"bold\",\r\n    border:\"2px solid black\"\r\n}\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const [show, setShow] = useState<boolean>(false);\r\n    const get2digitString = (num: number) => num < 10 ? \"0\" + num : num\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n        setTimerId(id);\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    };\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    const stringTime = get2digitString(date?.getHours()) + \":\"\r\n        + get2digitString(date?.getMinutes()) + \":\"\r\n        + get2digitString(date?.getSeconds()); // fix with date\r\n    const stringDate = date?.toDateString(); // fix with date\r\n\r\n   // при выходе из компоненты зачищаем setInterval\r\n    useEffect(() => {\r\n            return stop()\r\n        }\r\n        , [])\r\n\r\n    return (\r\n        <div>\r\n            <div style={{  backgroundColor: \"#1affb2\", width: \"200px\",  marginLeft: \"auto\", marginRight: \"auto\",fontWeight: \"bold\", border:\"2px solid black\"}}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                TIME: {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    DATE: {stringDate}\r\n                </div>\r\n            )}\r\n            <SuperButton\r\n                onClick={start}\r\n                name={\"start\"}    />\r\n            <SuperButton\r\n                onClick={stop}\r\n                name={\"stop\"}    />\r\n            {/*<button onClick={start}>start</button>\r\n            <button onClick={stop}>stop</button>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW9;\r\n","import React from 'react';\n\n\nlet Preloader = () => {\n    return <div  >\n    <img src=\"https://media.giphy.com/media/wnYB3vx9t6PXiq1ubB/giphy.gif\"  style={ { height: 200 } }/>\n    </div>\n}\n\nexport default Preloader;","import {Dispatch} from \"redux\";\r\n\r\ntype initStateType ={\r\n    loading:boolean\r\n}\r\n\r\nconst initState = {\r\n    loading:false\r\n};\r\n\r\nexport const loadingReducer = (state = initState, action: ActionsLoadingReducerType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"LOADING-STATUS\": {\r\n            return {...(state), loading: action.loading}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const loadingAC = (loading:boolean) => ({\r\n    type:\"LOADING-STATUS\",\r\n    loading\r\n}) as const ;\r\n\r\n export const loadingTC = () => (dispatch: Dispatch) => {\r\n         dispatch(loadingAC(true))\r\n         setTimeout(()=>{ dispatch(loadingAC(false))}, 2000);\r\n\r\n\r\n }\r\n export type loadingACType= ReturnType<typeof loadingAC>\r\n type ActionsLoadingReducerType = loadingACType","import React from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport Preloader from \"./bll/preloader\";\r\nimport {loadingTC} from \"./bll/loadingReducer\";\r\n\r\nfunction HW10() {\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.loading.loading)\r\n\r\n    const setLoading = () => {\r\n        dispatch( loadingTC())\r\n         };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n               {loading\r\n                ? (\r\n                    <Preloader/>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    value1:number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,value1,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n   /* const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;*/\r\n\r\n    return (\r\n        <div className={s.istyle}>\r\n            <input\r\n                value={value1}\r\n                type={\"range\"}\r\n                aria-valuenow={50}\r\n                onChange={onChangeCallback}\r\n             /*   className={finalRangeClassName}*/\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: number[]) => void\r\n    value1: number\r\n    value2: number\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n\r\n        onChangeRange, value1,value2,\r\n        // min, max, step, disable, ...\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n\r\n    /*const [value, setValue] = React.useState<number[]>([startValue1, startValue2]);*/\r\n\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n       /* setValue(newValue as number[]);*/\r\n        onChangeRange && onChangeRange(newValue as number[])\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n            <div className={classes.root}>\r\n                <Slider\r\n                    value={[value1,value2]}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    getAriaValueText={valuetext}\r\n                />\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from \"react\";\r\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {themeType} from \"../h12/bll/themeReducer\";\r\nimport s from \"../h12/HW12.module.css\";\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(50);\r\n\r\n    const [value2, setValue2] = useState(60);\r\n    const theme = useSelector<AppStoreType, themeType>(state => state.theme.themes)\r\n    const onChangeRange = (val: number) => setValue1(val)\r\n    const onChangeDoubleRange = ([val1, val2]: Array<number>) => {\r\n        setValue1(val1)\r\n        setValue2(val2)\r\n    }\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n            homeworks 11\r\n            </span>\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <div><SuperRange\r\n                    onChangeRange={onChangeRange}\r\n                    value1={value1}\r\n                    // сделать так чтоб value1 изменялось\r\n                /></div>\r\n            </div>\r\n\r\n            <div>\r\n                <span> </span>\r\n                <span>{value1}</span>\r\n                <div><SuperDoubleRange\r\n                    value1={value1}\r\n                    value2={value2}\r\n\r\n\r\n                    onChangeRange={onChangeDoubleRange}\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                /></div>\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW11;\r\n","\r\nexport type themeType='dark'| 'red'| 'some'\r\nexport type themeReducerInitStateType={\r\n    themes:themeType\r\n}\r\n\r\n\r\nconst initState = {\r\n    themes:'some'as const\r\n}\r\n\r\nexport const themeReducer = (state:themeReducerInitStateType = initState, action: ActionsChangeThemeReducerType): themeReducerInitStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"CHANGE-THEME\": {\r\n            return {...state, themes:action.theme}\r\n        }\r\n        default: return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const changeThemeAC = (theme:themeType) => ({\r\n    type:\"CHANGE-THEME\",\r\n    theme\r\n}) as const ;\r\n\r\nexport type loadingACType= ReturnType<typeof changeThemeAC>\r\ntype ActionsChangeThemeReducerType = loadingACType","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport SuperRadio from \"../h7/common/c6-SuperRadio/SuperRadio\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeThemeAC, themeType} from \"./bll/themeReducer\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nexport interface HW12Props{}\r\nconst themes = ['dark', 'red', 'some'];\r\n\r\nfunction HW12() {\r\n    const dispatch = useDispatch()\r\n    const theme = useSelector<AppStoreType, themeType>(state => state.theme.themes)\r\n    const onChangeOption = (theme: themeType) => {\r\n        dispatch(changeThemeAC(theme))\r\n    }\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks\r\n            </span>\r\n            <SuperRadio\r\n                options={themes}\r\n                onChangeOption={onChangeOption}\r\n                value={theme}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://neko-cafe-back.herokuapp.com/',\n\n})\n\nexport const RequestAPI = {\n    auth(data: AuthDataType) {\n        return instance.post<ResponseDataAuthType>(`auth/test`, data)\n    }\n\n}\ntype ResponseDataAuthType = {\n\n    errorText: string\n    info: string\n    yourBody:\n        {\n            success: boolean\n        }\n    yourQuery: any\n\n}\ntype AuthDataType = {\n    success:boolean\n}","import {Dispatch} from 'redux'\nimport {loadingAC, loadingACType} from \"../h10/bll/loadingReducer\";\nimport {RequestAPI} from \"./RequestsAPI\";\n\n\nconst initialState = {\n    success:true,\n    error:\"\"\n}\ntype InitialStateType = typeof initialState\n\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SET-SUCCESS':\n            return {...state, success: action.success}\n        case 'SET-ERROR':\n            return {...state, error: action.error}\n        default:\n            return state\n    }\n}\n// actions\nexport const setSuccessAC = (success: boolean) =>\n    ({type: 'SET-SUCCESS', success} as const)\nexport const setErrorAC = (error: string) =>\n    ({type: 'SET-ERROR', error} as const)\n\n// thunks\nexport const setSuccessTC = (success: boolean) => (dispatch: Dispatch<ActionsType>) => {\n    dispatch(loadingAC(true))\n    RequestAPI.auth({success:success})\n        .then(res => {debugger\n            if (res.status === 200) {\n\n                dispatch(setErrorAC(res.data.errorText))\n\n            } else {\n                dispatch(setErrorAC(\"server error\"))\n            }\n        })\n        .catch((error) => {debugger\n            dispatch(setErrorAC(error.response ? error.response.data.errorText : error.message))\n            console.log( {...error} ); console.log( error.response ? error.response.data.errorText : error.message)\n        }).finally(()=> dispatch(loadingAC(false))\n        )\n}\n\n\n\ntype ActionsType = ReturnType<typeof setSuccessAC>|loadingACType|ReturnType<typeof setErrorAC>\n\n\n\n","import React, {ChangeEvent, useCallback} from \"react\";\n\nimport SuperCheckbox from \"../h4/common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../h10/bll/store\";\nimport {setSuccessAC, setSuccessTC} from \"./auth-reducer\";\nimport Preloader from \"../h10/bll/preloader\";\n\nfunction Request() {\n    const success = useSelector<AppStoreType, boolean>(state => state.auth.success)\n    const loading = useSelector<AppStoreType, boolean>(state => state.loading.loading)\n    const error = useSelector<AppStoreType, string>(state => state.auth.error)\n    const dispatch = useDispatch()\n\n    const onChangeCheckedCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(setSuccessAC(e.currentTarget.checked))\n          },[])\n    const onClickHandler = () => {\n        dispatch(setSuccessTC(success))\n    }\n    return (\n        <div>\n\n            {loading\n                ? (\n                    <Preloader/>\n                ) : (<div>\n                    <SuperCheckbox checked={success} onChange={onChangeCheckedCallback}> </SuperCheckbox>\n                    <SuperButton\n                        onClick={onClickHandler}\n                        name={\"push\"}\n                        size={\"medium\"} />\n                </div>)\n            }\n            {error&&<div>\n            {error}\n            </div>}\n\n\n        </div>\n    );\n}\n\nexport default Request;","import React from \"react\";\nimport Request from \"./Request\";\n\nfunction HW13() {\n\n    return (\n        <>\n        <hr/>\n    <div>\n        homeworks 13\n    </div>\n        <div >\n            < Request/>\n        </div>\n    <hr/>\n        </>\n    );\n}\nexport default HW13;","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW12 from \"../../h12/HW12\";\r\nimport HW13 from \"../../h13/HW13\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>1\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n            <HW12/>\r\n            <HW13/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\"\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div>404</div>\r\n            <img src=\"https://programmist1s.ru/wp-content/uploads/2013/09/Pole-ob'ekta-nedostupno-dlya-zapisi-1S.jpg\"\r\n                 alt=\"альтернативный текст\"/>\r\n            <div>Page not found!</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\n\r\nfunction Jun() {\r\n    return (\r\n        <div style={{textAlign: \"center\", fontSize: \"36px\"}}>\r\n            <div> Я ЕСТЬ ДЖУН </div>\r\n            <img src=\"https://www.okino.ua/media/var/news/2017/08/07/baby_groot.jpg\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jun;\r\n","import React from \"react\";\r\n\r\nfunction JunPlus() {\r\n    return (\r\n        <div style={{textAlign: \"center\", fontSize: \"36px\"}}>\r\n            <div> Я ЕСТЬ ДЖУН++++++++++</div>\r\n            <img src=\"https://www.film.ru/sites/default/files/styles/thumb_og_800x420/public/filefield_paths/maxresdefault_11.jpg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JunPlus;\r\n","import React from \"react\";\r\nimport {Switch, Redirect, Route} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Jun from \"./pages/Jun\";\r\nimport JunPlus from \"./pages/JunPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUN: \"/Jun\",\r\n    JUN_PLUS: \"/JunPlus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                // add routes\r\n                <Route path={PATH.JUN} render={() => <Jun/>}/>\r\n                <Route path={PATH.JUN_PLUS} render={() => <JunPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <div>\r\n                <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.activeLink}>Домашки</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.JUN} activeClassName={s.activeLink}>Джун</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.JUN_PLUS} activeClassName={s.activeLink}>Джун ПЛЮС</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={s.center}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n           {/* <HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n           {/* <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {loadingReducer} from \"./loadingReducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\nimport {authReducer} from \"../../h13/auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n    theme: themeReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode> </Provider>,\r\n    document.getElementById(\"root\")\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__17dIt\",\"avatarArea\":\"Message_avatarArea__2MAol\",\"avatar\":\"Message_avatar__2zNAF\",\"containerMessage\":\"Message_containerMessage__18rqm\",\"name\":\"Message_name__1Dena\",\"messages\":\"Message_messages__27TLN\",\"time\":\"Message_time__3DuiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Header_center__Lvs4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__175K9\",\"dark-text\":\"HW12_dark-text__3ZybO\",\"red\":\"HW12_red__OX-Fx\",\"red-text\":\"HW12_red-text__3tGmP\",\"some\":\"HW12_some__28Pzl\",\"some-text\":\"HW12_some-text__1ddOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"Greeting_inputArea__dyrJL\",\"error\":\"Greeting_error__-ag4h\",\"inputClass\":\"Greeting_inputClass__3Kiws\",\"inputClassError\":\"Greeting_inputClassError__3h62r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1_koQ\",\"errorInput\":\"SuperInputText_errorInput__3p3Ng\",\"error\":\"SuperInputText_error__3UH9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2poDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__LbFwU\",\"column\":\"HW4_column__1P7vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__bimfY\",\"spanClassName\":\"SuperCheckbox_spanClassName__2gbW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__SPJZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2vMR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2PwMc\"};"],"sourceRoot":""}